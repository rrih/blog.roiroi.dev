{"pageProps":{"post":{"title":"remarkでMarkdownからHTMLへ変換する時にコードハイライトを適用する","date":"2021-03-07T12:47:07.322+09:00","slug":"add-highlight-js","author":{"name":"ろい","picture":"https://github.com/rrih.png"},"content":"<p>当ブログを作るときに<a href=\"https://github.com/vercel/next.js/tree/canary/examples/blog-starter-typescript\">これ</a>を使って雛形を生成していたのですが、<code>_posts</code>配下のコードハイライトが効いてなかったので<code>/lib</code>配下のサーバーサイド側でどのようにmdファイルの中身がhtmlに変換されているのか眺めてみたところ、<code>/lib/api.ts</code>で変換のマークダウンファイルの事前処理が実装されており、<code>/lib/markdownToHtml.ts</code>の<code>markdownToHtml</code>関数によって実際にマークダウンの文字列を受け取り返還後のHTMLを返しているようでした。元のソースコードでは<code>remark-html</code>の実態だけがuseされていましたが、これでは最低限のようでした。Markdown記法では、<code>```</code>としてソースコードを上下で挟むことで変換後のHTMLは<code>&#x3C;pre>&#x3C;code>&#x3C;/code>&#x3C;/pre></code>に囲われたもの(見た目としてはソースコードのようなもの)になります。この時の style が不足していました。例えば画面の幅を短くすると改行されておらず、コードだけ親要素の幅からはみ出てしまいブログの見た目が崩れてました。</p>\n<p>どうやら多くの remark を使ったブログの style は remark-highlight.js を適用したものが多いらしかったのでインストールして以下のように変更してみました。</p>\n<pre><code class=\"hljs language-bash\">yarn add remark-highlight.js</code></pre>\n<br />\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">import</span> remark <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'remark'</span>\n<span class=\"hljs-keyword\">import</span> html <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'remark-html'</span>\n<span class=\"hljs-keyword\">import</span> hljs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"remark-highlight.js\"</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">markdownToHtml</span>(<span class=\"hljs-params\">markdown: <span class=\"hljs-built_in\">string</span></span>) </span>{\n  <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> remark().use(hljs).use(html).process(markdown)\n  <span class=\"hljs-keyword\">return</span> result.toString()\n}\n</code></pre>\n<p>とりあえずこれで<code>_app.tsx</code>で<code>import \"highlight.js/styles/github.css\"</code> することで記事のコードブロックにスタイルが適用されました。import できる css は <a href=\"https://github.com/highlightjs/highlight.js/tree/master/src/styles\">https://github.com/highlightjs/highlight.js/tree/master/src/styles</a> に色々と用意されてるようなので好きなものを選ぶと良さそうです。</p>\n<h2>最後に</h2>\n<p><a href=\"https://github.com/vercel/next.js/pull/22848\">ちなみに本家 example の方に PR を送ってみました</a>が、取り込まれはしませんでした。対応が紳士的で神でした。OSS への contribute 自体初でしたが、反応があると嬉しいですね。今度はNext本体のコードに貢献してみたい。</p>\n","ogImage":{"url":"https://pbs.twimg.com/profile_banners/636879657/1606257712/1500x500"},"coverImage":"https://pbs.twimg.com/profile_banners/636879657/1606257712/1500x500"}},"__N_SSG":true}