{"version":3,"sources":["webpack:///./src/pages/jobhunt.tsx"],"names":["config","autoAddCss","library","add","fas","far","fab","addHalfOrLess","num","JobHunt","currentMonth","Date","getMonth","currentYear","getFullYear","useState","result","setResult","randomResult","Math","floor","random","Fragment","title","lang","description","className","onClick","icon","faCircle","faTimes"],"mappings":"4FAAA,gIAOAA,IAAOC,YAAa,EACpBC,IAAQC,IAAIC,IAAKC,IAAKC,KA8BtB,IAAMC,EAAgB,SAACC,GACnB,OAAQA,EAAM,GAAKA,EAAMA,EAAM,IAmFpBC,UAhFC,WACZ,IAmCMC,GAAe,IAAIC,MAAOC,WAAa,EACvCC,GAAc,IAAIF,MAAOG,cArCb,EAsCUC,mBAAS,IAA9BC,EAtCW,KAsCHC,EAtCG,KAuCZC,EAAeC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGrC,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,IAAD,CAAKC,MAAM,YAAYC,KAAK,KAAKC,YAAY,wBAC7C,kBAAC,kBAAD,KACA,6BACI,yBAAKC,UAAU,WAAf,sBACA,6BACI,yBAAKA,UAAU,oBAAf,4DAIKb,EAJL,IAImBH,EAJnB,IA7CM,gBAmDN,yBAAKgB,UAAU,iCACX,kBAAC,gBAAD,CAAeC,QAAS,kBAAMV,EAAU,UAAUV,EAAcW,GAAzB,wBACnC,kBAAC,UAAD,KACI,kBAAC,IAAD,CAAiBU,KAAMvB,IAAIwB,aAGnC,kBAAC,gBAAD,CAAeF,QAAS,kBAAMV,EAAU,UAAUV,EAAcW,GAAzB,wBACnC,kBAAC,UAAD,KACI,kBAAC,IAAD,CAAiBU,KAAMxB,IAAI0B,aAIvC,yBAAKJ,UAAU,oBACVV,KAIb,yBAAKU,UAAU,gBACf,4BAAQA,UAAU,eAAlB","file":"component---src-pages-jobhunt-tsx-1a6cb0cdb960479527d7.js","sourcesContent":["import { fas } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library, config } from '@fortawesome/fontawesome-svg-core'\nimport \"@fortawesome/fontawesome-svg-core/styles.css\";\nimport \"@fortawesome/fontawesome-svg-core/styles.css\";\nconfig.autoAddCss = false\nlibrary.add(fas, far, fab)\nimport { Link } from \"gatsby\";\nimport React, { useState } from \"react\";\nimport { IndexProfileDiv, LinkDOM, NewLinkCircle } from \".\";\nimport SEO from \"../components/seo\";\nimport { displayAllLinks } from \"./links\";\nimport styled from \"styled-components\";\n\nexport interface Question {\n    id: number,\n    questionText: string,\n}\n\n// const inferResultsOfJobHuntByQuestions = (ans: boolean) => {\n//     let result = ''\n//     if (ans) {\n//         result = '「就活は成功する」と予測された'\n//     }\n//     else {\n//         result = '「就活は失敗する」と予測された'\n//     }\n//     return (\n//         <>{result}</>\n//     )\n// }\n\n/**\n * 半分(50)以下なら 50 足す\n * @param num \n */\nconst addHalfOrLess = (num: number): number => {\n    return (num > 50 ? num : num + 50)\n}\n\nconst JobHunt = () => {\n    const questionList: Array<Question> = [\n        {\n            id: 1,\n            questionText: '現在、就職活動をしてみる',\n        },\n        {\n            id: 2,\n            questionText: '現在、カジュアル面談まで受けたことがある',\n        },\n        {\n            id: 3,\n            questionText: '現在、一次選考まで進んだことがある',\n        },\n        {\n            id: 4,\n            questionText: '現在、二次先行まで進んだことがある',\n        },\n        {\n            id: 5,\n            questionText: '現在、三次先行まで進んだことがある',\n        },\n        {\n            id: 6,\n            questionText: '現在、最終選考まで進んだことがある',\n        },\n        // {\n        //     id: ,\n        //     questionText: '',\n        // },\n        // {\n        //     id: ,\n        //     questionText: '',\n        // },\n    ]\n    // const [ans, setAns] = useState<Boolean>();\n    const currentMonth = new Date().getMonth() + 1;\n    const currentYear = new Date().getFullYear();\n    const [result, setResult] = useState('');\n    const randomResult = Math.floor(Math.random() * 100);\n\n\n    return (\n        <React.Fragment>\n            <SEO title=\"就活シミュレーター\" lang=\"ja\" description=\"大学生の就職活動のためのシミュレーター\" />\n            <IndexProfileDiv>\n            <div>\n                <div className=\"h2 mb-5\">質問の回答から、就活結果を予測します</div>\n                <div>\n                    <div className=\"mb-5 text-center\">\n                        {`\n                            Q\n                        `}\n                        {currentYear}年{currentMonth}月{questionList[0].questionText}\n                    </div>\n                    <div className=\"d-flex justify-content-around\">\n                        <NewLinkCircle onClick={() => setResult(`あなたの就活は${addHalfOrLess(randomResult)}%の確率で成功すると予測されました。`)}>\n                            <LinkDOM>\n                                <FontAwesomeIcon icon={far.faCircle} />\n                            </LinkDOM>\n                        </NewLinkCircle>\n                        <NewLinkCircle onClick={() => setResult(`あなたの就活は${addHalfOrLess(randomResult)}%の確率で失敗すると予測されました。`)}>\n                            <LinkDOM>\n                                <FontAwesomeIcon icon={fas.faTimes} />\n                            </LinkDOM>\n                        </NewLinkCircle>\n                    </div>\n                    <div className=\"mt-5 text-center\">\n                        {result}\n                    </div>\n                </div>\n            </div>\n            <div className=\"fixed-bottom\">\n            <footer className=\"text-center\">当サイトはジョークサイトです</footer>\n            </div>\n            </IndexProfileDiv>\n      </React.Fragment>\n    )\n}\n\nexport default JobHunt\n"],"sourceRoot":""}