{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/2020/20201207-cakephp-rest-api/","result":{"data":{"site":{"siteMetadata":{"title":"rrih"}},"markdownRemark":{"id":"8248f364-8467-5fce-864b-bf32ff6181f0","excerpt":"CakePHP4 で REST(ful) API を生やす方法について、完全に自分用メモです。 公式を見ればわかることですが、まずルーティングの設定から。 最低限の役割を持つもののみ記述するとはこのような感じになります。この場合、PostsController の index()関数が返す json…","html":"<p>CakePHP4 で REST(ful) API を生やす方法について、完全に自分用メモです。</p>\n<p>公式を見ればわかることですが、まずルーティングの設定から。</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">use</span> <span class=\"token package\">Cake<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>Route<span class=\"token punctuation\">\\</span>DashedRoute</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Cake<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>RouteBuilder</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$routes</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setRouteClass</span><span class=\"token punctuation\">(</span>DashedRoute<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$routes</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">scope</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'/api'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>RouteBuilder <span class=\"token variable\">$routes</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$routes</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setExtensions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'json'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$routes</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">resources</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'Posts'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$routes</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">fallbacks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>最低限の役割を持つもののみ記述すると<code class=\"language-text\">config/routes.php</code>はこのような感じになります。この場合、PostsController の index()関数が返す json データを取得するのに、<code class=\"language-text\">http://domain/api/posts/index(.json)/</code>を get する必要があります。</p>\n<p>そして Controller ですが、</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Controller<span class=\"token punctuation\">\\</span>AppController</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Cake<span class=\"token punctuation\">\\</span>Cache<span class=\"token punctuation\">\\</span>Cache</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PostsController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AppController</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> void\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">parent</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">loadComponent</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'RequestHandler'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 必須</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$topics</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">Posts</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'all'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">viewBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setClassName</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'Json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// jsonを指定</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'posts'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$topics</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'_serialize'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'posts'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// シリアライズ</span>\n        <span class=\"token comment\">// シリアライズする必要がある変数が二つ以上の場合は以下のような感じ</span>\n        <span class=\"token comment\">// $this->set(compact('posts', 'comments'));</span>\n        <span class=\"token comment\">// $this->set('_serialize', ['posts', 'comments']);</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>このようになります。なお Model は省略します。これで template はなくともブラウザで<code class=\"language-text\">http://domain/api/posts/index</code>にアクセスした時に</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"description\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"description2\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"desc3\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>こんな感じで json が表示されてますね。</p>\n<p>のちのちデプロイまでしときます。</p>\n<h3>まとめ</h3>\n<p>routing と Controller をそれぞれ url、view なし、json で返す、みたいな設定をしてあげればよい</p>","frontmatter":{"title":"CakePHP4にてrest api","date":"2020年12月06日","description":"","tags":["cakephp4"]}}},"pageContext":{"slug":"/2020/20201207-cakephp-rest-api/","previous":{"fields":{"slug":"/2020/20201205-kimetsu-no-yaiba-end/"},"frontmatter":{"title":"鬼滅の刃23巻を読み終えた感想","tags":["雑記"]}},"next":{"fields":{"slug":"/2020/20201221-top-renewal/"},"frontmatter":{"title":"サイトのマイナーチェンジ","tags":["雑記"]}}}}}