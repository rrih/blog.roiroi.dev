{"version":3,"sources":["webpack:///./src/pages/posts.tsx"],"names":["library","add","fas","far","fab","Posts","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","tags","group","className","map","node","frontmatter","fields","slug","key","date","to","icon","faTags","tag","kebabCase","fieldValue","pageQuery"],"mappings":"2FAAA,+LAaAA,IAAQC,IAAIC,IAAKC,IAAKC,KAkEPC,UAhED,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACfC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAC/BC,EAAOT,EAAKO,kBAAkBG,MAGpC,OACE,kBAAC,IAAD,CAAQT,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,SACX,yBAAKM,UAAU,sEACX,yBAAKA,UAAU,yCAAf,QACA,wBAAIA,UAAU,aACXL,EAAMM,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KACvCH,EAAKC,YAAYL,KAC9B,OACE,wBAAIQ,IAAKJ,EAAKE,OAAOC,KAAML,UAAU,sBACnC,4BAAQA,UAAU,aAChB,+BAAQE,EAAKC,YAAYI,KAAzB,MACE,kBAAC,OAAD,CAAMC,GAAIN,EAAKE,OAAOC,KAAML,UAAU,wBACnCN,SAwBf,yBAAKM,UAAU,yCAAwC,kBAAC,IAAD,CAAiBS,KAAMxB,IAAIyB,SAAlF,OACA,yBAAKV,UAAU,QACZF,EAAKG,KAAI,SAAAU,GACR,OACE,kBAAC,OAAD,CACEH,GAAE,SAAWI,IAAUD,EAAIE,YAAzB,IACFb,UAAU,uEAEVM,IAAKK,EAAIE,YAERF,EAAIE,mBAYhB,IAAMC,EAAY","file":"component---src-pages-posts-tsx-adcad715f776d002984b.js","sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Data } from \".\"\nimport styled from \"styled-components\";\nimport kebabCase from 'lodash/kebabCase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nlibrary.add(fas, far, fab)\n\nconst Posts = ({ data, location }: PageProps<Data>) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  const tags = data.allMarkdownRemark.group\n\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"記事一覧\" />\n      <div className=\"flex-wrap container px-0 pb-4 mx-md-4 pr-md-5 px-3 px-sm-5 px-md-0\">\n          <div className=\"h3 mx-4 mx-md-0 text-center my-3 pt-4\">記事一覧</div>\n          <ul className=\"ml-0 pl-0\">\n            {posts.map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug\n              const tags = node.frontmatter.tags\n              return (\n                <li key={node.fields.slug} className=\"list-unstyled mb-0\">\n                  <header className=\"text-wrap\">\n                    <small>{node.frontmatter.date} 　</small> \n                      <Link to={node.fields.slug} className=\"text-decoration-none\">\n                        {title}\n                      </Link>\n                      {/* タグ一旦なし */}\n                      {/* <span>\n                        <small>\n                          <FontAwesomeIcon icon={fas.faTags} />\n                        </small>\n                        {tags && tags.map(tag => (\n                          <small>\n                            <Link\n                              to={`/tags/${kebabCase(tag)}/`}\n                              className=\"mx-1 my-0 text-decoration-none\n                              bg-light text-dark p-1 rounded\"\n                            >\n                              {tag}\n                            </Link>\n                          </small>\n                        ))}\n                      </span> */}\n                  </header>\n                </li>\n              )\n            })}\n          </ul>\n          <div className=\"h3 mx-4 mx-md-0 text-center my-3 pt-4\"><FontAwesomeIcon icon={fas.faTags} /> タグ</div>\n          <div className=\"my-2\">\n            {tags.map(tag => {\n              return (\n                <Link\n                  to={`/tags/${kebabCase(tag.fieldValue)}/`}\n                  className=\"m-1 text-decoration-none\n                  text-dark bg-light rounded px-1 text-nowrap\"\n                  key={tag.fieldValue}\n                >\n                  {tag.fieldValue}                  \n                </Link>\n              )\n            })}\n          </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Posts\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY年MM月DD日\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}