{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["library","add","fas","far","fab","Tags","location","pageContext","data","tag","allMarkdownRemark","edges","totalCount","H3","styled","h3","console","log","title","description","className","icon","faTags","map","node","slug","fields","frontmatter","key","to","pageQuery"],"mappings":"4FAAA,sLAWAA,IAAQC,IAAIC,IAAKC,IAAKC,KA0DPC,UAxDF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAC7BC,EAAQF,EAARE,IADwC,EAElBD,EAAKE,kBAA3BC,EAFwC,EAExCA,MAAOC,EAFiC,EAEjCA,WACTC,EAAKC,IAAOC,GAAV,2DAAGD,CAAH,4CAKR,OADAE,QAAQC,IAAIL,GAEV,kBAAC,IAAD,CAAQN,SAAUA,EAAUY,MAAOT,GACjC,kBAAC,IAAD,CAAKS,MAAK,GAAKT,EAAOU,YAAgBV,EAAL,iBACjC,yBAAKW,UAAU,sEACb,kBAACP,EAAD,CAAIO,UAAU,sCACZ,kBAAC,IAAD,CAAiBC,KAAMnB,IAAIoB,SAD7B,IACyCb,GAEzC,wBAAIW,UAAU,aACXT,EAAMY,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAP,EAAUM,EAAKG,YAAfT,MACR,OACE,wBAAIU,IAAKH,EAAML,UAAU,sBACvB,kBAAC,OAAD,CAAMS,GAAIJ,EAAML,UAAU,wBACvBF,WAoCZ,IAAMY,EAAS","file":"component---src-templates-tags-js-7dec8854861a47defeb3.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport styled from \"styled-components\";\nimport { Link, graphql } from \"gatsby\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\nlibrary.add(fas, far, fab);\n\nconst Tags = ({ location, pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const H3 = styled.h3`\n    font-family: var(--bs-font-sans-serif);\n  `;\n\n  console.log(totalCount);\n  return (\n    <Layout location={location} title={tag}>\n      <SEO title={`${tag}`} description={`${tag}のタグがつけられたページ`} />\n      <div className=\"flex-wrap container px-0 pb-4 mx-md-4 pr-md-5 px-3 px-sm-5 px-md-0\">\n        <H3 className=\"mx-4 mx-md-0 text-center my-3 pt-4\">\n          <FontAwesomeIcon icon={fas.faTags} /> {tag}\n        </H3>\n        <ul className=\"ml-0 pl-0\">\n          {edges.map(({ node }) => {\n            const { slug } = node.fields;\n            const { title } = node.frontmatter;\n            return (\n              <li key={slug} className=\"list-unstyled mb-0\">\n                <Link to={slug} className=\"text-decoration-none\">\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}